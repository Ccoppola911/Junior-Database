-- Table: public.orders

-- DROP TABLE public.orders;

CREATE TABLE public.orders
(
    ord_num integer NOT NULL,
    ord_amount numeric(12,2) NOT NULL,
    advance_amount numeric(12,2) NOT NULL,
    ord_date date NOT NULL,
    cust_code character varying(6) COLLATE pg_catalog."default" NOT NULL,
    agent_code character varying(6) COLLATE pg_catalog."default" NOT NULL,
    ord_description character varying(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (ord_num),
    CONSTRAINT orders_agent_code_fkey FOREIGN KEY (agent_code)
        REFERENCES public.agents (agent_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT orders_cust_code_fkey FOREIGN KEY (cust_code)
        REFERENCES public.customer (cust_code) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.orders
    OWNER to postgres;


select * from agents; 
explain select * from agents;
explain analyze select * from agents;
explain analyze select agent_name from agents;
select * from orders where ord_amount>2000;
explain analyze select * from orders where ord_amount>2000;
explain analyze select * from customer where cust_city='London' or cust_city='New York';
create index on customer using btree(cust_city); 
explain analyze select * from orders where ord_amount=500.00;
create index on orders using hash(ord_amount);

set enable_nestloop=true;
set enable_hashjoin=false;
set enable_mergejoin=false;;
explain analyze select * from agents ag 
inner join customer cu 
on ag.agent_code=cu.agent_code;
select count(*)  from customer;
select count(*) from agents; 
create index on customer(agent_code);

set enable_nestloop=false;
set enable_hashjpom=false;
set enable_mergejoin=false;
explain analyze select * from customer cu
inner join agents ag
on ag.agent_code=cu.agent_code
where cu.grade>1;
create index on agents(agent_code);
create index on customer(agent_code);
