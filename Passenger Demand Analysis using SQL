CREATE TABLE stations (
  station_id INT PRIMARY KEY,
  station_name VARCHAR(100)
);
INSERT INTO stations (station_id, station_name)
VALUES
  (1, 'Station A'),
  (2, 'Station B'),
  (3, 'Station C'),
  (4, 'Station D');

CREATE TABLE trains (
  train_id INT PRIMARY KEY,
  train_name VARCHAR(100)
);
INSERT INTO trains (train_id, train_name)
VALUES
  (1, 'Express One'),
  (2, 'Super Fast'),
  (3, 'Local Shuttle');

CREATE TABLE passenger_records (
  record_id INT PRIMARY KEY,
  train_id INT,
  station_id INT,
  passenger_count INT
);
INSERT INTO passenger_records (record_id, train_id, station_id, passenger_count)
VALUES
  (1, 1, 1, 100),
  (2, 1, 2, 150),
  (3, 1, 3, 200),
  (4, 1, 4, 180),
  (5, 2, 1, 120),
  (6, 2, 2, 100),
  (7, 2, 3, 150),
  (8, 2, 4, 160),
  (9, 3, 1, 80),
  (10, 3, 2, 90),
  (11, 3, 3, 120),
  (12, 3, 4, 100);

# Find the total number of passengers for each train
SELECT t.train_id, t.train_name, SUM(pr.passenger_count) AS total_passengers
FROM trains t
INNER JOIN passenger_records pr ON t.train_id = pr.train_id
GROUP BY t.train_id, t.train_name;

# Find the busiest station based on the total number of passengers
SELECT s.station_id, s.station_name, SUM(pr.passenger_count) AS total_passengers
FROM stations s
INNER JOIN passenger_records pr ON s.station_id = pr.station_id
GROUP BY s.station_id, s.station_name
ORDER BY total_passengers DESC
LIMIT 1;

# Find the average number of passengers per train
SELECT AVG(total_passengers) AS average_passengers
FROM (
  SELECT t.train_id, t.train_name, SUM(pr.passenger_count) AS total_passengers
  FROM trains t
  INNER JOIN passenger_records pr ON t.train_id = pr.train_id
  GROUP BY t.train_id, t.train_name
) AS subquery;


